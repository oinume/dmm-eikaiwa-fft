version: 2
jobs:
  build:
    working_directory: /go/src/github.com/oinume/lekcije
    docker:
      - image: golang:1.8-wheezy
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_USER: "root"
          MySQL_PASSWORD: "lekcije"
          MYSQL_HOST: "127.0.0.1"
          MYSQL_PORT: "3306"
          MYSQL_DATABASE: "lekcije_test"
          REDIS_URL: "redis://h:@127.0.0.1:6379"
          E2E_WEB_DRIVER: "PhantomJS"
          VERSION_HASH: "_version_"
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD=true
    steps:
      - run:
          name: "Set .gitconfig"
          command: |
            echo "" > ~/.gitconfig
            git config --global url."https://github.com".insteadOf git://github.com
            git config --global http.https://gopkg.in.followRedirects true
      - checkout
      - run:
          name: "Install packages"
          command: |
            set -eu
            apt-get update -qq
            apt-get install -y mysql-client net-tools
      - run:
          name: "Wait MySQL is up"
          command: |
            set -u
            timeout 5 bash -c "while ! mysqladmin ping -u ${MYSQL_USER} -h ${MYSQL_HOST} --silent; do sleep 0.5; done"
      - run:
          name: "Setup database"
          command: |
            set -eu
            mysql -u${MYSQL_USER} -h ${MYSQL_HOST} -e "CREATE DATABASE IF NOT EXISTS lekcije_test DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci"
            mysql -u${MYSQL_USER} -h ${MYSQL_HOST} -e "GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, LOCK TABLES ON \`lekcije\\_test%\`.* TO 'lekcije'@'%' IDENTIFIED BY 'lekcije'"
      - run:
          name: "Install dependencies"
          command: |
            make setup
      - run:
          name: "Apply database migrations"
          command: |
            goose -env=circle_ci up
      - run:
          name: "Run lint"
          command: make go_lint
      - run:
          name: "Run test"
          command: make test
